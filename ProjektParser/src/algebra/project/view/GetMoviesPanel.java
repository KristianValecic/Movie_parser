/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package algebra.project.view;

import algebra.project.dal.Repository;
import algebra.project.dal.RepositoryFactory;
import algebra.project.dal.parsers.rss.MovieParser;
import algebra.project.model.Movie;
import algebra.project.utils.MessageUtils;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.xml.stream.XMLStreamException;

/**
 *
 * @author Kiki
 */
public class GetMoviesPanel extends javax.swing.JPanel {

    /**
     * Creates new form GetMoviesPanel
     */
    
    private Repository repository;
    private DefaultListModel<Movie> model = new DefaultListModel<>();
    
    public GetMoviesPanel() {
        initComponents();
        initList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listMovies = new javax.swing.JList<>();
        btnDeleteAll = new javax.swing.JButton();
        btnGetMovies = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1060, 700));

        jScrollPane1.setViewportView(listMovies);

        btnDeleteAll.setBackground(java.awt.Color.red);
        btnDeleteAll.setForeground(java.awt.Color.white);
        btnDeleteAll.setText("Delete all");
        btnDeleteAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAllActionPerformed(evt);
            }
        });

        btnGetMovies.setText("Get movies from internet source");
        btnGetMovies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetMoviesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGetMovies, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteAll, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(585, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnGetMovies, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDeleteAll, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(291, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnDeleteAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAllActionPerformed
        if (MessageUtils.showConfirmDialog("Are you sure?", "Are you sure?") == JOptionPane.YES_OPTION) {
            new Thread(() -> {
                try {
                    for (Movie movie : repository.selectAllMovies()) {
                        if (movie.getPosterPath() != null) {
                            Files.deleteIfExists(Paths.get(movie.getPosterPath()));
                        }
                    }
                    repository.deleteAll();
                    loadModel();
                } catch (Exception ex) {
                    Logger.getLogger(GetMoviesPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }).start();
        }
    }//GEN-LAST:event_btnDeleteAllActionPerformed

    private void btnGetMoviesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetMoviesActionPerformed
        new Thread(() -> {
            try {
                List<Movie> movies = MovieParser.parse();
                repository.createAllMovies(movies);
                loadModel();            
            } catch (Exception ex ) {
                Logger.getLogger(GetMoviesPanel.class.getName()).log(Level.SEVERE, null, ex);
                MessageUtils.showErrorMessage("Error", "Unable to get movies");
                System.exit(1);
            }
        }).start();
        
    }//GEN-LAST:event_btnGetMoviesActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteAll;
    private javax.swing.JButton btnGetMovies;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<Movie> listMovies;
    // End of variables declaration//GEN-END:variables

    private void initList() {
        try {
            repository = RepositoryFactory.getRepository();
            model = new DefaultListModel<>();
            loadModel();
        } catch (Exception ex) {
            Logger.getLogger(GetMoviesPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadModel() throws Exception {
        java.awt.EventQueue.invokeLater(() -> {
            try {
                model.clear();
                List<Movie> movies = repository.selectAllMovies();
                movies.forEach(model::addElement); 
                listMovies.setModel(model);
            } catch (Exception ex) {
                Logger.getLogger(GetMoviesPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }
}
